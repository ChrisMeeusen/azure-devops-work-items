# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'macOS-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g node-gyp
    npm install
    npm run build:all
  displayName: 'npm install and build'
  env:
    GH_TOKEN: $(gh.token)

- script: npm run pkg-sync
  displayName: 'package.json sync'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Build.SourcesDirectory)/dist/mac
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.SourcesDirectory)/dist/mac.zip
    replaceExistingArchive: true
  displayName: 'zip mac binary'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Build.SourcesDirectory)/dist/win-unpacked
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.SourcesDirectory)/dist/win.zip
    replaceExistingArchive: true
  displayName: 'zip win binary'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Build.SourcesDirectory)/dist/linux-unpacked
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.SourcesDirectory)/dist/linux.zip
    replaceExistingArchive: true
  displayName: 'zip linux binary'

- task: CopyFiles@2
  inputs:
    Contents: |
      $(Build.SourcesDirectory)/hook.js
      $(Build.SourcesDirectory)/hook-installer.js
      $(Build.SourcesDirectory)/post-install.js
      $(Build.SourcesDirectory)/package.json
      $(Build.SourcesDirectory)/README.md
    TargetFolder: $(Build.SourcesDirectory)/package/core
  displayName: 'Core package file copies'

- task: CopyFiles@2
  inputs:
    Contents: $(Build.SourcesDirectory)/dist/mac.zip
    TargetFolder: $(Build.SourcesDirectory)/package/mac
  displayName: 'Mac package file copies'

- task: CopyFiles@2
  inputs:
    Contents: $(Build.SourcesDirectory)/dist/win.zip
    TargetFolder: $(Build.SourcesDirectory)/package/win
  displayName: 'Windows package file copies'

- task: CopyFiles@2
  inputs:
    Contents: $(Build.SourcesDirectory)/dist/linux.zip
    TargetFolder: $(Build.SourcesDirectory)/package/linux
  displayName: 'Linux package file copies'

- script: npm run pkg-rename
  displayName: 'package.json renames'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/package
    ArtifactName: 'package'
